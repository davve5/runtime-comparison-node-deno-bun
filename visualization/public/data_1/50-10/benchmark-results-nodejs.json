{
  "runtime": "Node.js",
  "date": "2025-03-10T17:38:04.701Z",
  "config": {
    "iterations": 50,
    "sampleEvery": 10,
    "outputFile": "../visualization/public/data/50-10/benchmark-results-nodejs.json",
    "combinedOutputFile": "../visualization/public/data/50-10/benchmark-results-combined.json"
  },
  "summary": {
    "memory": {
      "allocationDeallocation": {
        "executionTime": {
          "min": 199.79702100000577,
          "max": 410.522826,
          "avg": 299.8282271399991,
          "median": 319.75122599999304
        },
        "memoryUsage": {
          "min": -209.03834533691406,
          "max": -0.21915435791015625,
          "avg": -193.87071334838868,
          "median": -197.08265686035156
        }
      },
      "jsonLoad": {
        "executionTime": {
          "min": 1385.4219840000005,
          "max": 1605.3405980000389,
          "avg": 1471.213377539999,
          "median": 1454.8618820000192
        },
        "memoryUsage": {
          "min": 207.7032012939453,
          "max": 208.8746109008789,
          "avg": 208.5700650024414,
          "median": 208.56365203857422
        }
      }
    },
    "diskIO": {
      "fileRead": {
        "executionTime": {
          "min": 74.81709800000681,
          "max": 92.60568100001547,
          "avg": 81.89956783999804,
          "median": 82.54274900001474
        },
        "memoryUsage": {
          "min": -11.756660461425781,
          "max": 0.0235748291015625,
          "avg": -10.739835815429688,
          "median": -11.66824722290039
        }
      }
    },
    "cpu": {
      "fibonacci": {
        "executionTime": {
          "min": 6049.591031,
          "max": 6727.462369000015,
          "avg": 6664.431117279999,
          "median": 6662.588988500007
        },
        "memoryUsage": {
          "min": 0.00344085693359375,
          "max": 0.004852294921875,
          "avg": 0.0035552978515625,
          "median": 0.00344085693359375
        }
      },
      "primeCalculation": {
        "executionTime": {
          "min": 3.0271199999842793,
          "max": 6.762117000005674,
          "avg": 3.838266659997062,
          "median": 3.8867419999978665
        },
        "memoryUsage": {
          "min": 0.15622711181640625,
          "max": 0.1931610107421875,
          "avg": 0.16007781982421876,
          "median": 0.159393310546875
        }
      }
    }
  },
  "iterations": [
    {
      "iteration": 1,
      "timestamp": "2025-03-10T17:38:04.702Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 410.522826,
            "startMemory": {
              "rss": 49,
              "heapTotal": 6.546875,
              "heapUsed": 4.780769348144531,
              "external": 1.762730598449707
            },
            "endMemory": {
              "rss": 52.046875,
              "heapTotal": 7.046875,
              "heapUsed": 4.561614990234375,
              "external": 34.229865074157715
            },
            "memoryDifference": {
              "rss": 3.046875,
              "heapTotal": 0.5,
              "heapUsed": -0.21915435791015625,
              "external": 32.46713447570801
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1500.084388,
            "startMemory": {
              "rss": 52.046875,
              "heapTotal": 7.046875,
              "heapUsed": 4.5653533935546875,
              "external": 34.229865074157715
            },
            "endMemory": {
              "rss": 300.296875,
              "heapTotal": 243.78125,
              "heapUsed": 213.12786865234375,
              "external": 1.755746841430664
            },
            "memoryDifference": {
              "rss": 248.25,
              "heapTotal": 236.734375,
              "heapUsed": 208.56251525878906,
              "external": -32.47411823272705
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 88.31586700000003,
            "startMemory": {
              "rss": 300.296875,
              "heapTotal": 243.78125,
              "heapUsed": 213.13809204101562,
              "external": 1.755746841430664
            },
            "endMemory": {
              "rss": 323.71875,
              "heapTotal": 236.140625,
              "heapUsed": 201.56246948242188,
              "external": 9.755746841430664
            },
            "memoryDifference": {
              "rss": 23.421875,
              "heapTotal": -7.640625,
              "heapUsed": -11.57562255859375,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6049.591031,
            "startMemory": {
              "rss": 323.71875,
              "heapTotal": 236.140625,
              "heapUsed": 201.57706451416016,
              "external": 9.755746841430664
            },
            "endMemory": {
              "rss": 323.71875,
              "heapTotal": 236.140625,
              "heapUsed": 201.58148956298828,
              "external": 9.755746841430664
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.004425048828125,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.9167429999997694,
            "startMemory": {
              "rss": 323.71875,
              "heapTotal": 236.140625,
              "heapUsed": 201.5838394165039,
              "external": 9.755746841430664
            },
            "endMemory": {
              "rss": 324.71875,
              "heapTotal": 236.390625,
              "heapUsed": 201.74688720703125,
              "external": 9.755746841430664
            },
            "memoryDifference": {
              "rss": 1,
              "heapTotal": 0.25,
              "heapUsed": 0.16304779052734375,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 2,
      "timestamp": "2025-03-10T17:38:13.760Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 392.92034500000045,
            "startMemory": {
              "rss": 324.71875,
              "heapTotal": 236.390625,
              "heapUsed": 201.85092163085938,
              "external": 9.762530326843262
            },
            "endMemory": {
              "rss": 243.53125,
              "heapTotal": 8.296875,
              "heapUsed": 4.796195983886719,
              "external": 44.24094772338867
            },
            "memoryDifference": {
              "rss": -81.1875,
              "heapTotal": -228.09375,
              "heapUsed": -197.05472564697266,
              "external": 34.47841739654541
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1429.785519000001,
            "startMemory": {
              "rss": 243.53125,
              "heapTotal": 8.296875,
              "heapUsed": 4.797660827636719,
              "external": 44.24094772338867
            },
            "endMemory": {
              "rss": 317.359375,
              "heapTotal": 244.03125,
              "heapUsed": 212.50086212158203,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 73.828125,
              "heapTotal": 235.734375,
              "heapUsed": 207.7032012939453,
              "external": -42.487589836120605
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.42560400000002,
            "startMemory": {
              "rss": 317.359375,
              "heapTotal": 244.03125,
              "heapUsed": 212.50585174560547,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 327.140625,
              "heapTotal": 236.390625,
              "heapUsed": 200.8522720336914,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 9.78125,
              "heapTotal": -7.640625,
              "heapUsed": -11.653579711914062,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6655.830879000001,
            "startMemory": {
              "rss": 327.140625,
              "heapTotal": 236.390625,
              "heapUsed": 200.85560607910156,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 327.140625,
              "heapTotal": 236.390625,
              "heapUsed": 200.8591537475586,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00354766845703125,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.104011999999784,
            "startMemory": {
              "rss": 327.140625,
              "heapTotal": 236.390625,
              "heapUsed": 200.86141204833984,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 327.140625,
              "heapTotal": 236.390625,
              "heapUsed": 201.0193862915039,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1579742431640625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 3,
      "timestamp": "2025-03-10T17:38:23.324Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 377.1631469999993,
            "startMemory": {
              "rss": 327.140625,
              "heapTotal": 236.390625,
              "heapUsed": 201.0329360961914,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 230.78125,
              "heapTotal": 7.796875,
              "heapUsed": 4.10125732421875,
              "external": 33.091614723205566
            },
            "memoryDifference": {
              "rss": -96.359375,
              "heapTotal": -228.59375,
              "heapUsed": -196.93167877197266,
              "external": 23.3382568359375
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1519.5537719999993,
            "startMemory": {
              "rss": 230.78125,
              "heapTotal": 7.796875,
              "heapUsed": 4.1030426025390625,
              "external": 33.091614723205566
            },
            "endMemory": {
              "rss": 306.1875,
              "heapTotal": 244.03125,
              "heapUsed": 212.51339721679688,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 75.40625,
              "heapTotal": 236.234375,
              "heapUsed": 208.4103546142578,
              "external": -31.3382568359375
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 86.57738299999983,
            "startMemory": {
              "rss": 306.1875,
              "heapTotal": 244.03125,
              "heapUsed": 212.5177230834961,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 328.515625,
              "heapTotal": 236.390625,
              "heapUsed": 200.8401870727539,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 22.328125,
              "heapTotal": -7.640625,
              "heapUsed": -11.677536010742188,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6650.438837999998,
            "startMemory": {
              "rss": 328.515625,
              "heapTotal": 236.390625,
              "heapUsed": 200.84356689453125,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 328.515625,
              "heapTotal": 236.390625,
              "heapUsed": 200.84712982177734,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00356292724609375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.155083999998169,
            "startMemory": {
              "rss": 328.515625,
              "heapTotal": 236.390625,
              "heapUsed": 200.84864044189453,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 328.515625,
              "heapTotal": 236.390625,
              "heapUsed": 201.00843048095703,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1597900390625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 4,
      "timestamp": "2025-03-10T17:38:32.965Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 397.9347740000012,
            "startMemory": {
              "rss": 328.515625,
              "heapTotal": 236.390625,
              "heapUsed": 201.01898193359375,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 241.890625,
              "heapTotal": 7.546875,
              "heapUsed": 4.046966552734375,
              "external": 41.409751892089844
            },
            "memoryDifference": {
              "rss": -86.625,
              "heapTotal": -228.84375,
              "heapUsed": -196.97201538085938,
              "external": 31.656394004821777
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1443.7513099999996,
            "startMemory": {
              "rss": 241.890625,
              "heapTotal": 7.546875,
              "heapUsed": 4.0484771728515625,
              "external": 41.409751892089844
            },
            "endMemory": {
              "rss": 307.65625,
              "heapTotal": 244.03125,
              "heapUsed": 212.52623748779297,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 65.765625,
              "heapTotal": 236.484375,
              "heapUsed": 208.4777603149414,
              "external": -39.65639400482178
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 80.0261619999983,
            "startMemory": {
              "rss": 307.65625,
              "heapTotal": 244.03125,
              "heapUsed": 212.53057861328125,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 329.984375,
              "heapTotal": 236.390625,
              "heapUsed": 200.8962173461914,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 22.328125,
              "heapTotal": -7.640625,
              "heapUsed": -11.634361267089844,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6686.733369999998,
            "startMemory": {
              "rss": 329.984375,
              "heapTotal": 236.390625,
              "heapUsed": 200.89959716796875,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 329.984375,
              "heapTotal": 236.390625,
              "heapUsed": 200.90316009521484,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00356292724609375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.116068000002997,
            "startMemory": {
              "rss": 329.984375,
              "heapTotal": 236.390625,
              "heapUsed": 200.90467071533203,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 329.984375,
              "heapTotal": 236.390625,
              "heapUsed": 201.0611572265625,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15648651123046875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 5,
      "timestamp": "2025-03-10T17:38:42.579Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 381.4849979999999,
            "startMemory": {
              "rss": 329.984375,
              "heapTotal": 236.390625,
              "heapUsed": 201.07460021972656,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 228.59375,
              "heapTotal": 8.046875,
              "heapUsed": 4.007476806640625,
              "external": 27.82732105255127
            },
            "memoryDifference": {
              "rss": -101.390625,
              "heapTotal": -228.34375,
              "heapUsed": -197.06712341308594,
              "external": 18.073963165283203
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1583.8706690000035,
            "startMemory": {
              "rss": 228.59375,
              "heapTotal": 8.046875,
              "heapUsed": 4.0089874267578125,
              "external": 27.82732105255127
            },
            "endMemory": {
              "rss": 324.28125,
              "heapTotal": 248.28125,
              "heapUsed": 212.5306167602539,
              "external": 2.2538833618164062
            },
            "memoryDifference": {
              "rss": 95.6875,
              "heapTotal": 240.234375,
              "heapUsed": 208.5216293334961,
              "external": -25.573437690734863
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.47044499999902,
            "startMemory": {
              "rss": 324.28125,
              "heapTotal": 248.28125,
              "heapUsed": 212.5349578857422,
              "external": 2.2538833618164062
            },
            "endMemory": {
              "rss": 338.78125,
              "heapTotal": 248.28125,
              "heapUsed": 212.55853271484375,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 14.5,
              "heapTotal": 0,
              "heapUsed": 0.0235748291015625,
              "external": 7.49947452545166
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6715.516924999996,
            "startMemory": {
              "rss": 338.78125,
              "heapTotal": 248.28125,
              "heapUsed": 212.5619125366211,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 338.78125,
              "heapTotal": 248.28125,
              "heapUsed": 212.5656280517578,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00371551513671875,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.127787999997963,
            "startMemory": {
              "rss": 338.78125,
              "heapTotal": 248.28125,
              "heapUsed": 212.567138671875,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 338.78125,
              "heapTotal": 248.28125,
              "heapUsed": 212.72666931152344,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1595306396484375,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 6,
      "timestamp": "2025-03-10T17:38:52.350Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 334.10693799999717,
            "startMemory": {
              "rss": 338.78125,
              "heapTotal": 248.28125,
              "heapUsed": 212.73712921142578,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 239.453125,
              "heapTotal": 7.546875,
              "heapUsed": 3.7806167602539062,
              "external": 31.370691299438477
            },
            "memoryDifference": {
              "rss": -99.328125,
              "heapTotal": -240.734375,
              "heapUsed": -208.95651245117188,
              "external": 21.61733341217041
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1436.8859720000037,
            "startMemory": {
              "rss": 239.453125,
              "heapTotal": 7.546875,
              "heapUsed": 3.7821273803710938,
              "external": 31.370691299438477
            },
            "endMemory": {
              "rss": 337.8125,
              "heapTotal": 244.03125,
              "heapUsed": 212.53639221191406,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 98.359375,
              "heapTotal": 236.484375,
              "heapUsed": 208.75426483154297,
              "external": -29.61733341217041
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 74.81709800000681,
            "startMemory": {
              "rss": 337.8125,
              "heapTotal": 244.03125,
              "heapUsed": 212.54073333740234,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.65625,
              "heapTotal": 236.390625,
              "heapUsed": 200.84410858154297,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -2.15625,
              "heapTotal": -7.640625,
              "heapUsed": -11.696624755859375,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6680.359618000002,
            "startMemory": {
              "rss": 335.65625,
              "heapTotal": 236.390625,
              "heapUsed": 200.8474884033203,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.65625,
              "heapTotal": 236.390625,
              "heapUsed": 200.85114288330078,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00365447998046875,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.045140000001993,
            "startMemory": {
              "rss": 335.65625,
              "heapTotal": 236.390625,
              "heapUsed": 200.85265350341797,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.65625,
              "heapTotal": 236.390625,
              "heapUsed": 201.00914001464844,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15648651123046875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 7,
      "timestamp": "2025-03-10T17:39:01.882Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 205.06256600000052,
            "startMemory": {
              "rss": 335.65625,
              "heapTotal": 236.390625,
              "heapUsed": 201.01946258544922,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 247.421875,
              "heapTotal": 7.796875,
              "heapUsed": 4.079521179199219,
              "external": 34.0134801864624
            },
            "memoryDifference": {
              "rss": -88.234375,
              "heapTotal": -228.59375,
              "heapUsed": -196.93994140625,
              "external": 24.260122299194336
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1531.0217980000016,
            "startMemory": {
              "rss": 247.421875,
              "heapTotal": 7.796875,
              "heapUsed": 4.081031799316406,
              "external": 34.0134801864624
            },
            "endMemory": {
              "rss": 341.859375,
              "heapTotal": 228.28125,
              "heapUsed": 212.5394744873047,
              "external": 2.2540740966796875
            },
            "memoryDifference": {
              "rss": 94.4375,
              "heapTotal": 220.484375,
              "heapUsed": 208.45844268798828,
              "external": -31.759406089782715
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.80612100000144,
            "startMemory": {
              "rss": 341.859375,
              "heapTotal": 228.28125,
              "heapUsed": 212.54381561279297,
              "external": 2.2540740966796875
            },
            "endMemory": {
              "rss": 336.90625,
              "heapTotal": 236.640625,
              "heapUsed": 200.85869598388672,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -4.953125,
              "heapTotal": 8.359375,
              "heapUsed": -11.68511962890625,
              "external": 7.499283790588379
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6688.433899999996,
            "startMemory": {
              "rss": 336.90625,
              "heapTotal": 236.640625,
              "heapUsed": 200.86207580566406,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.90625,
              "heapTotal": 236.640625,
              "heapUsed": 200.86565399169922,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00357818603515625,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 5.180416000002879,
            "startMemory": {
              "rss": 336.90625,
              "heapTotal": 236.640625,
              "heapUsed": 200.8671646118164,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.90625,
              "heapTotal": 236.640625,
              "heapUsed": 201.02669525146484,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1595306396484375,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 8,
      "timestamp": "2025-03-10T17:39:11.393Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 205.58582500000193,
            "startMemory": {
              "rss": 336.90625,
              "heapTotal": 236.640625,
              "heapUsed": 201.0380401611328,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 247.625,
              "heapTotal": 7.546875,
              "heapUsed": 4.0501251220703125,
              "external": 30.933551788330078
            },
            "memoryDifference": {
              "rss": -89.28125,
              "heapTotal": -229.09375,
              "heapUsed": -196.9879150390625,
              "external": 21.18019390106201
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1431.5637409999908,
            "startMemory": {
              "rss": 247.625,
              "heapTotal": 7.546875,
              "heapUsed": 4.0516357421875,
              "external": 30.933551788330078
            },
            "endMemory": {
              "rss": 342.328125,
              "heapTotal": 244.03125,
              "heapUsed": 212.55210876464844,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.703125,
              "heapTotal": 236.484375,
              "heapUsed": 208.50047302246094,
              "external": -29.18019390106201
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 75.7801490000129,
            "startMemory": {
              "rss": 342.328125,
              "heapTotal": 244.03125,
              "heapUsed": 212.55644989013672,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.359375,
              "heapTotal": 236.390625,
              "heapUsed": 200.8915023803711,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -6.96875,
              "heapTotal": -7.640625,
              "heapUsed": -11.664947509765625,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6716.194473999989,
            "startMemory": {
              "rss": 335.359375,
              "heapTotal": 236.390625,
              "heapUsed": 200.8943099975586,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.359375,
              "heapTotal": 236.390625,
              "heapUsed": 200.8977508544922,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.07930800000031,
            "startMemory": {
              "rss": 335.359375,
              "heapTotal": 236.390625,
              "heapUsed": 200.89926147460938,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.359375,
              "heapTotal": 236.390625,
              "heapUsed": 201.05561065673828,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 9,
      "timestamp": "2025-03-10T17:39:20.828Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 316.0554600000032,
            "startMemory": {
              "rss": 335.359375,
              "heapTotal": 236.390625,
              "heapUsed": 201.06421661376953,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 232.03125,
              "heapTotal": 7.796875,
              "heapUsed": 3.7681045532226562,
              "external": 18.043950080871582
            },
            "memoryDifference": {
              "rss": -103.328125,
              "heapTotal": -228.59375,
              "heapUsed": -197.29611206054688,
              "external": 8.290592193603516
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1439.5255659999966,
            "startMemory": {
              "rss": 232.03125,
              "heapTotal": 7.796875,
              "heapUsed": 3.7696151733398438,
              "external": 18.043950080871582
            },
            "endMemory": {
              "rss": 334.234375,
              "heapTotal": 244.28125,
              "heapUsed": 212.5622329711914,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 102.203125,
              "heapTotal": 236.484375,
              "heapUsed": 208.79261779785156,
              "external": -16.290592193603516
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.21895100000256,
            "startMemory": {
              "rss": 334.234375,
              "heapTotal": 244.28125,
              "heapUsed": 212.56600189208984,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.3125,
              "heapTotal": 236.640625,
              "heapUsed": 200.92013549804688,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 1.078125,
              "heapTotal": -7.640625,
              "heapUsed": -11.645866394042969,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6652.201174000002,
            "startMemory": {
              "rss": 335.3125,
              "heapTotal": 236.640625,
              "heapUsed": 200.92294311523438,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.3125,
              "heapTotal": 236.640625,
              "heapUsed": 200.92638397216797,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.135842999996385,
            "startMemory": {
              "rss": 335.3125,
              "heapTotal": 236.640625,
              "heapUsed": 200.92789459228516,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.3125,
              "heapTotal": 236.640625,
              "heapUsed": 201.08728790283203,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 10,
      "timestamp": "2025-03-10T17:39:30.321Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 305.7845760000055,
            "startMemory": {
              "rss": 335.3125,
              "heapTotal": 236.640625,
              "heapUsed": 201.10507202148438,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 249.78125,
              "heapTotal": 7.796875,
              "heapUsed": 3.7403488159179688,
              "external": 43.10918712615967
            },
            "memoryDifference": {
              "rss": -85.53125,
              "heapTotal": -228.84375,
              "heapUsed": -197.3647232055664,
              "external": 33.3558292388916
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1385.4219840000005,
            "startMemory": {
              "rss": 232.453125,
              "heapTotal": 7.796875,
              "heapUsed": 3.7418594360351562,
              "external": 43.10918712615967
            },
            "endMemory": {
              "rss": 326.828125,
              "heapTotal": 244.03125,
              "heapUsed": 212.61647033691406,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.375,
              "heapTotal": 236.234375,
              "heapUsed": 208.8746109008789,
              "external": -41.3558292388916
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.70897100000002,
            "startMemory": {
              "rss": 326.828125,
              "heapTotal": 244.03125,
              "heapUsed": 212.62035369873047,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 334.578125,
              "heapTotal": 236.390625,
              "heapUsed": 200.90509033203125,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 7.75,
              "heapTotal": -7.640625,
              "heapUsed": -11.715263366699219,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6653.618950999997,
            "startMemory": {
              "rss": 334.578125,
              "heapTotal": 236.390625,
              "heapUsed": 200.90789794921875,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.578125,
              "heapTotal": 236.390625,
              "heapUsed": 200.91133880615234,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.1058829999965383,
            "startMemory": {
              "rss": 334.578125,
              "heapTotal": 236.390625,
              "heapUsed": 200.91284942626953,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.578125,
              "heapTotal": 236.390625,
              "heapUsed": 201.06919860839844,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 11,
      "timestamp": "2025-03-10T17:39:39.750Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 230.1620990000083,
            "startMemory": {
              "rss": 334.578125,
              "heapTotal": 236.390625,
              "heapUsed": 201.07823944091797,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 242.21875,
              "heapTotal": 7.796875,
              "heapUsed": 4.166107177734375,
              "external": 35.249290466308594
            },
            "memoryDifference": {
              "rss": -92.359375,
              "heapTotal": -228.59375,
              "heapUsed": -196.9121322631836,
              "external": 25.495932579040527
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1470.4675390000048,
            "startMemory": {
              "rss": 242.21875,
              "heapTotal": 7.796875,
              "heapUsed": 4.167686462402344,
              "external": 35.249290466308594
            },
            "endMemory": {
              "rss": 336.84375,
              "heapTotal": 244.03125,
              "heapUsed": 212.62342071533203,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.625,
              "heapTotal": 236.234375,
              "heapUsed": 208.4557342529297,
              "external": -33.49593257904053
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.18404500000179,
            "startMemory": {
              "rss": 336.84375,
              "heapTotal": 244.03125,
              "heapUsed": 212.6333999633789,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.421875,
              "heapTotal": 236.390625,
              "heapUsed": 200.91783905029297,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -1.421875,
              "heapTotal": -7.640625,
              "heapUsed": -11.715560913085938,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6664.238297999997,
            "startMemory": {
              "rss": 335.421875,
              "heapTotal": 236.390625,
              "heapUsed": 200.9207992553711,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.421875,
              "heapTotal": 236.390625,
              "heapUsed": 200.9242401123047,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.755975000007311,
            "startMemory": {
              "rss": 335.421875,
              "heapTotal": 236.390625,
              "heapUsed": 200.92581939697266,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.421875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0853042602539,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15948486328125,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 12,
      "timestamp": "2025-03-10T17:39:49.202Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 331.75336100001005,
            "startMemory": {
              "rss": 335.421875,
              "heapTotal": 236.390625,
              "heapUsed": 201.2434310913086,
              "external": 9.800148010253906
            },
            "endMemory": {
              "rss": 233.875,
              "heapTotal": 8.046875,
              "heapUsed": 3.9701461791992188,
              "external": 25.493730545043945
            },
            "memoryDifference": {
              "rss": -101.546875,
              "heapTotal": -228.34375,
              "heapUsed": -197.27328491210938,
              "external": 15.693582534790039
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1454.6429510000016,
            "startMemory": {
              "rss": 233.875,
              "heapTotal": 8.046875,
              "heapUsed": 3.9716567993164062,
              "external": 25.493730545043945
            },
            "endMemory": {
              "rss": 328.65625,
              "heapTotal": 244.28125,
              "heapUsed": 212.6457977294922,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.78125,
              "heapTotal": 236.234375,
              "heapUsed": 208.67414093017578,
              "external": -23.74037265777588
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.2254879999964,
            "startMemory": {
              "rss": 328.65625,
              "heapTotal": 244.28125,
              "heapUsed": 212.64956665039062,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 334.390625,
              "heapTotal": 236.640625,
              "heapUsed": 200.98463439941406,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 5.734375,
              "heapTotal": -7.640625,
              "heapUsed": -11.664932250976562,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6640.2474749999965,
            "startMemory": {
              "rss": 334.390625,
              "heapTotal": 236.640625,
              "heapUsed": 200.98744201660156,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.390625,
              "heapTotal": 236.640625,
              "heapUsed": 200.99088287353516,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.112457000010181,
            "startMemory": {
              "rss": 334.390625,
              "heapTotal": 236.640625,
              "heapUsed": 200.99239349365234,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.14874267578125,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 13,
      "timestamp": "2025-03-10T17:39:58.714Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 252.4124240000092,
            "startMemory": {
              "rss": 334.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.1576385498047,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 240.671875,
              "heapTotal": 7.796875,
              "heapUsed": 4.152854919433594,
              "external": 32.846967697143555
            },
            "memoryDifference": {
              "rss": -93.71875,
              "heapTotal": -228.84375,
              "heapUsed": -197.0047836303711,
              "external": 23.09360980987549
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1445.9986979999958,
            "startMemory": {
              "rss": 240.671875,
              "heapTotal": 7.796875,
              "heapUsed": 4.154365539550781,
              "external": 32.846967697143555
            },
            "endMemory": {
              "rss": 335.09375,
              "heapTotal": 244.03125,
              "heapUsed": 212.64423370361328,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.421875,
              "heapTotal": 236.234375,
              "heapUsed": 208.4898681640625,
              "external": -31.09360980987549
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.73973100000876,
            "startMemory": {
              "rss": 335.09375,
              "heapTotal": 244.03125,
              "heapUsed": 212.64800262451172,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.734375,
              "heapTotal": 236.390625,
              "heapUsed": 200.92877197265625,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0.640625,
              "heapTotal": -7.640625,
              "heapUsed": -11.719230651855469,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6665.4879990000045,
            "startMemory": {
              "rss": 335.734375,
              "heapTotal": 236.390625,
              "heapUsed": 200.93157958984375,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.734375,
              "heapTotal": 236.390625,
              "heapUsed": 200.93502044677734,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 6.762117000005674,
            "startMemory": {
              "rss": 335.734375,
              "heapTotal": 236.390625,
              "heapUsed": 200.93653106689453,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.734375,
              "heapTotal": 236.390625,
              "heapUsed": 201.09275817871094,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15622711181640625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 14,
      "timestamp": "2025-03-10T17:40:08.165Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 207.16624899998715,
            "startMemory": {
              "rss": 335.734375,
              "heapTotal": 236.390625,
              "heapUsed": 201.1049575805664,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 245.203125,
              "heapTotal": 8.046875,
              "heapUsed": 4.186393737792969,
              "external": 30.32177448272705
            },
            "memoryDifference": {
              "rss": -90.53125,
              "heapTotal": -228.34375,
              "heapUsed": -196.91856384277344,
              "external": 20.568416595458984
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1517.4878520000057,
            "startMemory": {
              "rss": 245.203125,
              "heapTotal": 8.046875,
              "heapUsed": 4.187904357910156,
              "external": 30.32177448272705
            },
            "endMemory": {
              "rss": 339.140625,
              "heapTotal": 244.28125,
              "heapUsed": 212.64785766601562,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 93.9375,
              "heapTotal": 236.234375,
              "heapUsed": 208.45995330810547,
              "external": -28.568416595458984
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 77.59332200000063,
            "startMemory": {
              "rss": 339.140625,
              "heapTotal": 244.28125,
              "heapUsed": 212.65162658691406,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 336.25,
              "heapTotal": 236.640625,
              "heapUsed": 201.01681518554688,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -2.890625,
              "heapTotal": -7.640625,
              "heapUsed": -11.634811401367188,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6684.628483999986,
            "startMemory": {
              "rss": 336.25,
              "heapTotal": 236.640625,
              "heapUsed": 201.01962280273438,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.25,
              "heapTotal": 236.640625,
              "heapUsed": 201.02306365966797,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.0876229999994393,
            "startMemory": {
              "rss": 336.25,
              "heapTotal": 236.640625,
              "heapUsed": 201.02457427978516,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.25,
              "heapTotal": 236.640625,
              "heapUsed": 201.18092346191406,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 15,
      "timestamp": "2025-03-10T17:40:17.657Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 216.31516999998712,
            "startMemory": {
              "rss": 336.25,
              "heapTotal": 236.640625,
              "heapUsed": 201.19256591796875,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 245.71875,
              "heapTotal": 7.796875,
              "heapUsed": 4.08709716796875,
              "external": 24.510841369628906
            },
            "memoryDifference": {
              "rss": -90.53125,
              "heapTotal": -228.84375,
              "heapUsed": -197.10546875,
              "external": 14.75748348236084
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1443.2526819999912,
            "startMemory": {
              "rss": 245.71875,
              "heapTotal": 7.796875,
              "heapUsed": 4.0886077880859375,
              "external": 24.510841369628906
            },
            "endMemory": {
              "rss": 340.625,
              "heapTotal": 244.03125,
              "heapUsed": 212.6533966064453,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.90625,
              "heapTotal": 236.234375,
              "heapUsed": 208.56478881835938,
              "external": -22.75748348236084
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.21469100000104,
            "startMemory": {
              "rss": 340.625,
              "heapTotal": 244.03125,
              "heapUsed": 212.65716552734375,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.671875,
              "heapTotal": 236.390625,
              "heapUsed": 201.05535125732422,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -4.953125,
              "heapTotal": -7.640625,
              "heapUsed": -11.601814270019531,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6717.690307000012,
            "startMemory": {
              "rss": 335.671875,
              "heapTotal": 236.390625,
              "heapUsed": 201.05815887451172,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.671875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0615997314453,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.043007000000216,
            "startMemory": {
              "rss": 335.671875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0631103515625,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.671875,
              "heapTotal": 236.390625,
              "heapUsed": 201.2559585571289,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.19284820556640625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 16,
      "timestamp": "2025-03-10T17:40:27.120Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 202.16176600000472,
            "startMemory": {
              "rss": 335.671875,
              "heapTotal": 236.390625,
              "heapUsed": 201.26524353027344,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 245.984375,
              "heapTotal": 8.046875,
              "heapUsed": 4.047859191894531,
              "external": 19.74135112762451
            },
            "memoryDifference": {
              "rss": -89.6875,
              "heapTotal": -228.34375,
              "heapUsed": -197.2173843383789,
              "external": 9.987993240356445
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1429.6448530000052,
            "startMemory": {
              "rss": 245.984375,
              "heapTotal": 8.046875,
              "heapUsed": 4.049369812011719,
              "external": 19.74135112762451
            },
            "endMemory": {
              "rss": 340.328125,
              "heapTotal": 244.03125,
              "heapUsed": 212.66034698486328,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.34375,
              "heapTotal": 235.984375,
              "heapUsed": 208.61097717285156,
              "external": -17.987993240356445
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.89493999999831,
            "startMemory": {
              "rss": 340.328125,
              "heapTotal": 244.03125,
              "heapUsed": 212.66411590576172,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 334.375,
              "heapTotal": 236.390625,
              "heapUsed": 200.90745544433594,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -5.953125,
              "heapTotal": -7.640625,
              "heapUsed": -11.756660461425781,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6662.161067999987,
            "startMemory": {
              "rss": 334.375,
              "heapTotal": 236.390625,
              "heapUsed": 200.91026306152344,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.375,
              "heapTotal": 236.390625,
              "heapUsed": 200.91370391845703,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.09312200002023,
            "startMemory": {
              "rss": 334.375,
              "heapTotal": 236.390625,
              "heapUsed": 200.91521453857422,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.375,
              "heapTotal": 236.390625,
              "heapUsed": 201.07156372070312,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 17,
      "timestamp": "2025-03-10T17:40:36.499Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 322.0035880000214,
            "startMemory": {
              "rss": 334.375,
              "heapTotal": 236.390625,
              "heapUsed": 201.09030151367188,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 249.75,
              "heapTotal": 8.046875,
              "heapUsed": 4.2766876220703125,
              "external": 43.23212909698486
            },
            "memoryDifference": {
              "rss": -84.625,
              "heapTotal": -228.34375,
              "heapUsed": -196.81361389160156,
              "external": 33.4787712097168
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1425.2674659999902,
            "startMemory": {
              "rss": 249.75,
              "heapTotal": 8.046875,
              "heapUsed": 4.2781982421875,
              "external": 43.23212909698486
            },
            "endMemory": {
              "rss": 326.90625,
              "heapTotal": 247.78125,
              "heapUsed": 212.67369079589844,
              "external": 2.2538833618164062
            },
            "memoryDifference": {
              "rss": 77.15625,
              "heapTotal": 239.734375,
              "heapUsed": 208.39549255371094,
              "external": -40.97824573516846
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 92.60568100001547,
            "startMemory": {
              "rss": 326.90625,
              "heapTotal": 247.78125,
              "heapUsed": 212.67745971679688,
              "external": 2.2538833618164062
            },
            "endMemory": {
              "rss": 345.40625,
              "heapTotal": 248.53125,
              "heapUsed": 212.6996078491211,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 18.5,
              "heapTotal": 0.75,
              "heapUsed": 0.02214813232421875,
              "external": 7.49947452545166
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6663.384521,
            "startMemory": {
              "rss": 345.40625,
              "heapTotal": 248.53125,
              "heapUsed": 212.7024154663086,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 345.40625,
              "heapTotal": 248.53125,
              "heapUsed": 212.7058563232422,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.0623220000125,
            "startMemory": {
              "rss": 345.40625,
              "heapTotal": 248.53125,
              "heapUsed": 212.70736694335938,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 345.40625,
              "heapTotal": 248.53125,
              "heapUsed": 212.8668975830078,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1595306396484375,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 18,
      "timestamp": "2025-03-10T17:40:46.009Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 378.8276360000018,
            "startMemory": {
              "rss": 345.40625,
              "heapTotal": 248.53125,
              "heapUsed": 212.8759765625,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 240.671875,
              "heapTotal": 7.796875,
              "heapUsed": 3.8376312255859375,
              "external": 30.10136890411377
            },
            "memoryDifference": {
              "rss": -104.734375,
              "heapTotal": -240.734375,
              "heapUsed": -209.03834533691406,
              "external": 20.348011016845703
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1434.1245979999949,
            "startMemory": {
              "rss": 240.671875,
              "heapTotal": 7.796875,
              "heapUsed": 3.839141845703125,
              "external": 30.10136890411377
            },
            "endMemory": {
              "rss": 335.609375,
              "heapTotal": 244.28125,
              "heapUsed": 212.67691802978516,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.9375,
              "heapTotal": 236.484375,
              "heapUsed": 208.83777618408203,
              "external": -28.348011016845703
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 80.06396100000711,
            "startMemory": {
              "rss": 335.609375,
              "heapTotal": 244.28125,
              "heapUsed": 212.6806869506836,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 334.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.01595306396484,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -0.875,
              "heapTotal": -7.640625,
              "heapUsed": -11.66473388671875,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.501538000011,
            "startMemory": {
              "rss": 334.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.01876068115234,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.02220153808594,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.612325999973109,
            "startMemory": {
              "rss": 334.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.02371215820312,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.18006134033203,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 19,
      "timestamp": "2025-03-10T17:40:55.569Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 202.22423200000776,
            "startMemory": {
              "rss": 334.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.1894760131836,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 245.421875,
              "heapTotal": 7.796875,
              "heapUsed": 4.1633758544921875,
              "external": 27.58036994934082
            },
            "memoryDifference": {
              "rss": -89.3125,
              "heapTotal": -228.84375,
              "heapUsed": -197.0261001586914,
              "external": 17.827012062072754
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1485.606448000006,
            "startMemory": {
              "rss": 245.421875,
              "heapTotal": 7.796875,
              "heapUsed": 4.164886474609375,
              "external": 27.58036994934082
            },
            "endMemory": {
              "rss": 339.765625,
              "heapTotal": 244.03125,
              "heapUsed": 212.68016052246094,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.34375,
              "heapTotal": 236.234375,
              "heapUsed": 208.51527404785156,
              "external": -25.827012062072754
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.67972899999586,
            "startMemory": {
              "rss": 339.765625,
              "heapTotal": 244.03125,
              "heapUsed": 212.68392944335938,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 334.828125,
              "heapTotal": 236.390625,
              "heapUsed": 200.9961929321289,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -4.9375,
              "heapTotal": -7.640625,
              "heapUsed": -11.687736511230469,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.935037999996,
            "startMemory": {
              "rss": 334.828125,
              "heapTotal": 236.390625,
              "heapUsed": 200.9990005493164,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.828125,
              "heapTotal": 236.390625,
              "heapUsed": 201.00244140625,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.036580999993021,
            "startMemory": {
              "rss": 334.828125,
              "heapTotal": 236.390625,
              "heapUsed": 201.0039520263672,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 334.828125,
              "heapTotal": 236.390625,
              "heapUsed": 201.1635513305664,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15959930419921875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 20,
      "timestamp": "2025-03-10T17:41:05.002Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 343.04916899997625,
            "startMemory": {
              "rss": 334.828125,
              "heapTotal": 236.390625,
              "heapUsed": 201.17261505126953,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 239.125,
              "heapTotal": 8.046875,
              "heapUsed": 3.8598251342773438,
              "external": 28.701664924621582
            },
            "memoryDifference": {
              "rss": -95.703125,
              "heapTotal": -228.34375,
              "heapUsed": -197.3127899169922,
              "external": 18.948307037353516
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1431.137962000008,
            "startMemory": {
              "rss": 239.125,
              "heapTotal": 8.046875,
              "heapUsed": 3.8613357543945312,
              "external": 28.701664924621582
            },
            "endMemory": {
              "rss": 334.203125,
              "heapTotal": 244.28125,
              "heapUsed": 212.6831283569336,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 95.078125,
              "heapTotal": 236.234375,
              "heapUsed": 208.82179260253906,
              "external": -26.948307037353516
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 75.26555899999221,
            "startMemory": {
              "rss": 334.203125,
              "heapTotal": 244.28125,
              "heapUsed": 212.68689727783203,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 337.359375,
              "heapTotal": 236.890625,
              "heapUsed": 201.0277099609375,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 3.15625,
              "heapTotal": -7.390625,
              "heapUsed": -11.659187316894531,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6711.648383000022,
            "startMemory": {
              "rss": 337.359375,
              "heapTotal": 236.890625,
              "heapUsed": 201.030517578125,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.359375,
              "heapTotal": 236.890625,
              "heapUsed": 201.0339584350586,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.8567409999959636,
            "startMemory": {
              "rss": 337.359375,
              "heapTotal": 236.890625,
              "heapUsed": 201.03546905517578,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.359375,
              "heapTotal": 236.890625,
              "heapUsed": 201.1918182373047,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 21,
      "timestamp": "2025-03-10T17:41:14.570Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 201.7706049999979,
            "startMemory": {
              "rss": 337.359375,
              "heapTotal": 236.890625,
              "heapUsed": 201.20074462890625,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 246.484375,
              "heapTotal": 7.796875,
              "heapUsed": 4.2590484619140625,
              "external": 30.439425468444824
            },
            "memoryDifference": {
              "rss": -90.875,
              "heapTotal": -229.09375,
              "heapUsed": -196.9416961669922,
              "external": 20.686067581176758
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1434.2435849999893,
            "startMemory": {
              "rss": 246.484375,
              "heapTotal": 7.796875,
              "heapUsed": 4.26055908203125,
              "external": 30.439425468444824
            },
            "endMemory": {
              "rss": 340.828125,
              "heapTotal": 244.28125,
              "heapUsed": 212.68600463867188,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.34375,
              "heapTotal": 236.484375,
              "heapUsed": 208.42544555664062,
              "external": -28.686067581176758
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.14892999999574,
            "startMemory": {
              "rss": 340.828125,
              "heapTotal": 244.28125,
              "heapUsed": 212.6897735595703,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.03439331054688,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -4.9375,
              "heapTotal": -7.640625,
              "heapUsed": -11.655380249023438,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.623903,
            "startMemory": {
              "rss": 335.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.03720092773438,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.04064178466797,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.149713999999221,
            "startMemory": {
              "rss": 335.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.04215240478516,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.20154571533203,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 22,
      "timestamp": "2025-03-10T17:41:23.954Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 212.73621599999024,
            "startMemory": {
              "rss": 335.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.41294860839844,
              "external": 9.840063095092773
            },
            "endMemory": {
              "rss": 245.09375,
              "heapTotal": 7.796875,
              "heapUsed": 4.320648193359375,
              "external": 38.56074142456055
            },
            "memoryDifference": {
              "rss": -90.796875,
              "heapTotal": -228.84375,
              "heapUsed": -197.09230041503906,
              "external": 28.720678329467773
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1491.571151000011,
            "startMemory": {
              "rss": 245.09375,
              "heapTotal": 7.796875,
              "heapUsed": 4.3221588134765625,
              "external": 38.56074142456055
            },
            "endMemory": {
              "rss": 340.25,
              "heapTotal": 228.28125,
              "heapUsed": 212.69397735595703,
              "external": 2.2538833618164062
            },
            "memoryDifference": {
              "rss": 95.15625,
              "heapTotal": 220.484375,
              "heapUsed": 208.37181854248047,
              "external": -36.30685806274414
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 77.85045999998692,
            "startMemory": {
              "rss": 340.25,
              "heapTotal": 228.28125,
              "heapUsed": 212.69774627685547,
              "external": 2.2538833618164062
            },
            "endMemory": {
              "rss": 338.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.00946807861328,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -1.90625,
              "heapTotal": 8.359375,
              "heapUsed": -11.688278198242188,
              "external": 7.49947452545166
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.648833999992,
            "startMemory": {
              "rss": 338.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.01227569580078,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 338.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.01571655273438,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.083195999992313,
            "startMemory": {
              "rss": 338.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.01722717285156,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 338.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.17357635498047,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 23,
      "timestamp": "2025-03-10T17:41:33.402Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 350.29317299998365,
            "startMemory": {
              "rss": 338.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.18250274658203,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 252.921875,
              "heapTotal": 7.796875,
              "heapUsed": 4.164886474609375,
              "external": 45.673471450805664
            },
            "memoryDifference": {
              "rss": -85.421875,
              "heapTotal": -228.84375,
              "heapUsed": -197.01761627197266,
              "external": 35.9201135635376
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1472.6817359999986,
            "startMemory": {
              "rss": 252.921875,
              "heapTotal": 7.796875,
              "heapUsed": 4.1663970947265625,
              "external": 45.673471450805664
            },
            "endMemory": {
              "rss": 327.03125,
              "heapTotal": 244.03125,
              "heapUsed": 212.69227600097656,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 74.109375,
              "heapTotal": 236.234375,
              "heapUsed": 208.52587890625,
              "external": -43.9201135635376
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 78.96642399998382,
            "startMemory": {
              "rss": 327.03125,
              "heapTotal": 244.03125,
              "heapUsed": 212.696044921875,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.796875,
              "heapTotal": 236.390625,
              "heapUsed": 200.98192596435547,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 8.765625,
              "heapTotal": -7.640625,
              "heapUsed": -11.714118957519531,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.202172999998,
            "startMemory": {
              "rss": 335.796875,
              "heapTotal": 236.390625,
              "heapUsed": 200.98473358154297,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.796875,
              "heapTotal": 236.390625,
              "heapUsed": 200.98817443847656,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.25316200000816,
            "startMemory": {
              "rss": 335.796875,
              "heapTotal": 236.390625,
              "heapUsed": 200.98968505859375,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.14907836914062,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 24,
      "timestamp": "2025-03-10T17:41:42.970Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 207.77806799998507,
            "startMemory": {
              "rss": 335.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.15814208984375,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 247.890625,
              "heapTotal": 8.296875,
              "heapUsed": 3.850799560546875,
              "external": 8.674783706665039
            },
            "memoryDifference": {
              "rss": -87.90625,
              "heapTotal": -228.09375,
              "heapUsed": -197.30734252929688,
              "external": -1.0785741806030273
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1568.829889000015,
            "startMemory": {
              "rss": 247.890625,
              "heapTotal": 8.296875,
              "heapUsed": 3.8523101806640625,
              "external": 8.674783706665039
            },
            "endMemory": {
              "rss": 342.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.69505310058594,
              "external": 2.2538833618164062
            },
            "memoryDifference": {
              "rss": 94.703125,
              "heapTotal": 240.234375,
              "heapUsed": 208.84274291992188,
              "external": -6.420900344848633
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 86.46847400002298,
            "startMemory": {
              "rss": 342.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.69879913330078,
              "external": 2.2538833618164062
            },
            "endMemory": {
              "rss": 343.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.720947265625,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 1,
              "heapTotal": 0,
              "heapUsed": 0.02214813232421875,
              "external": 7.49947452545166
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.1431729999895,
            "startMemory": {
              "rss": 343.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.7237548828125,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 343.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.7271957397461,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.107122999994317,
            "startMemory": {
              "rss": 343.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.72870635986328,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 343.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.8850555419922,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 25,
      "timestamp": "2025-03-10T17:41:52.500Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 371.37440400000196,
            "startMemory": {
              "rss": 343.59375,
              "heapTotal": 248.53125,
              "heapUsed": 212.89398193359375,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 262.671875,
              "heapTotal": 7.796875,
              "heapUsed": 4.254112243652344,
              "external": 54.44996452331543
            },
            "memoryDifference": {
              "rss": -80.921875,
              "heapTotal": -240.734375,
              "heapUsed": -208.6398696899414,
              "external": 44.69660663604736
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1517.7613330000022,
            "startMemory": {
              "rss": 262.671875,
              "heapTotal": 7.796875,
              "heapUsed": 4.255622863769531,
              "external": 54.44996452331543
            },
            "endMemory": {
              "rss": 327.515625,
              "heapTotal": 244.03125,
              "heapUsed": 212.6980743408203,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 64.84375,
              "heapTotal": 236.234375,
              "heapUsed": 208.44245147705078,
              "external": -52.69660663604736
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.33938099999796,
            "startMemory": {
              "rss": 327.515625,
              "heapTotal": 244.03125,
              "heapUsed": 212.70184326171875,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 336.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.01110076904297,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 9.28125,
              "heapTotal": -7.640625,
              "heapUsed": -11.690742492675781,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.704362000019,
            "startMemory": {
              "rss": 336.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.01390838623047,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.01734924316406,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.906738999998197,
            "startMemory": {
              "rss": 336.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.01885986328125,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.17825317382812,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 26,
      "timestamp": "2025-03-10T17:42:02.137Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 348.43655499999295,
            "startMemory": {
              "rss": 336.796875,
              "heapTotal": 236.390625,
              "heapUsed": 201.18731689453125,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 250.359375,
              "heapTotal": 8.546875,
              "heapUsed": 4.109748840332031,
              "external": 41.48904609680176
            },
            "memoryDifference": {
              "rss": -86.4375,
              "heapTotal": -227.84375,
              "heapUsed": -197.07756805419922,
              "external": 31.73568820953369
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1440.3798510000051,
            "startMemory": {
              "rss": 250.359375,
              "heapTotal": 8.546875,
              "heapUsed": 4.111259460449219,
              "external": 41.48904609680176
            },
            "endMemory": {
              "rss": 327.140625,
              "heapTotal": 244.03125,
              "heapUsed": 212.71411895751953,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 76.78125,
              "heapTotal": 235.484375,
              "heapUsed": 208.6028594970703,
              "external": -39.73568820953369
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 79.38145700001041,
            "startMemory": {
              "rss": 327.140625,
              "heapTotal": 244.03125,
              "heapUsed": 212.71784210205078,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.90625,
              "heapTotal": 236.390625,
              "heapUsed": 201.02483367919922,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 8.765625,
              "heapTotal": -7.640625,
              "heapUsed": -11.693008422851562,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6715.531527999992,
            "startMemory": {
              "rss": 335.90625,
              "heapTotal": 236.390625,
              "heapUsed": 201.02759552001953,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.90625,
              "heapTotal": 236.390625,
              "heapUsed": 201.03103637695312,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.1288650000060443,
            "startMemory": {
              "rss": 335.90625,
              "heapTotal": 236.390625,
              "heapUsed": 201.0325469970703,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.90625,
              "heapTotal": 236.390625,
              "heapUsed": 201.18889617919922,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 27,
      "timestamp": "2025-03-10T17:42:11.726Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 216.33502399999998,
            "startMemory": {
              "rss": 335.90625,
              "heapTotal": 236.390625,
              "heapUsed": 201.19699096679688,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 245.4375,
              "heapTotal": 8.546875,
              "heapUsed": 4.2186737060546875,
              "external": 27.443154335021973
            },
            "memoryDifference": {
              "rss": -90.46875,
              "heapTotal": -227.84375,
              "heapUsed": -196.9783172607422,
              "external": 17.689796447753906
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1457.526893000002,
            "startMemory": {
              "rss": 245.4375,
              "heapTotal": 8.546875,
              "heapUsed": 4.220184326171875,
              "external": 27.443154335021973
            },
            "endMemory": {
              "rss": 340.265625,
              "heapTotal": 244.03125,
              "heapUsed": 212.71572875976562,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.828125,
              "heapTotal": 235.484375,
              "heapUsed": 208.49554443359375,
              "external": -25.689796447753906
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 76.775312999991,
            "startMemory": {
              "rss": 340.265625,
              "heapTotal": 244.03125,
              "heapUsed": 212.71945190429688,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 336.3125,
              "heapTotal": 236.390625,
              "heapUsed": 201.08429718017578,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -3.953125,
              "heapTotal": -7.640625,
              "heapUsed": -11.635154724121094,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6727.26225900001,
            "startMemory": {
              "rss": 336.3125,
              "heapTotal": 236.390625,
              "heapUsed": 201.0870590209961,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.3125,
              "heapTotal": 236.390625,
              "heapUsed": 201.09191131591797,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.004852294921875,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 5.900735999981407,
            "startMemory": {
              "rss": 336.3125,
              "heapTotal": 236.390625,
              "heapUsed": 201.09342193603516,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.3125,
              "heapTotal": 236.390625,
              "heapUsed": 201.25281524658203,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 28,
      "timestamp": "2025-03-10T17:42:21.212Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 350.9425110000011,
            "startMemory": {
              "rss": 336.3125,
              "heapTotal": 236.390625,
              "heapUsed": 201.2641372680664,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 247.578125,
              "heapTotal": 8.546875,
              "heapUsed": 4.06207275390625,
              "external": 38.27949333190918
            },
            "memoryDifference": {
              "rss": -88.734375,
              "heapTotal": -227.84375,
              "heapUsed": -197.20206451416016,
              "external": 28.526135444641113
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1549.5702410000085,
            "startMemory": {
              "rss": 247.578125,
              "heapTotal": 8.546875,
              "heapUsed": 4.0635833740234375,
              "external": 38.27949333190918
            },
            "endMemory": {
              "rss": 342.34375,
              "heapTotal": 228.28125,
              "heapUsed": 212.72137451171875,
              "external": 2.2538833618164062
            },
            "memoryDifference": {
              "rss": 94.765625,
              "heapTotal": 219.734375,
              "heapUsed": 208.6577911376953,
              "external": -36.02560997009277
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.36436899998807,
            "startMemory": {
              "rss": 342.34375,
              "heapTotal": 228.28125,
              "heapUsed": 212.72509765625,
              "external": 2.2538833618164062
            },
            "endMemory": {
              "rss": 338.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.13671112060547,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -3.9375,
              "heapTotal": 8.359375,
              "heapUsed": -11.588386535644531,
              "external": 7.49947452545166
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6710.3101529999985,
            "startMemory": {
              "rss": 338.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.13935089111328,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 338.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.14279174804688,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.0271199999842793,
            "startMemory": {
              "rss": 338.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.14430236816406,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 338.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.33721923828125,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1929168701171875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 29,
      "timestamp": "2025-03-10T17:42:30.912Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 340.855670000019,
            "startMemory": {
              "rss": 338.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.34500885009766,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 246.578125,
              "heapTotal": 7.546875,
              "heapUsed": 4.0176849365234375,
              "external": 35.07247352600098
            },
            "memoryDifference": {
              "rss": -91.828125,
              "heapTotal": -229.09375,
              "heapUsed": -197.32732391357422,
              "external": 25.31911563873291
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1510.4404019999783,
            "startMemory": {
              "rss": 246.578125,
              "heapTotal": 7.546875,
              "heapUsed": 4.019195556640625,
              "external": 35.07247352600098
            },
            "endMemory": {
              "rss": 340.953125,
              "heapTotal": 244.03125,
              "heapUsed": 212.73301696777344,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.375,
              "heapTotal": 236.484375,
              "heapUsed": 208.7138214111328,
              "external": -33.31911563873291
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 84.76115699997172,
            "startMemory": {
              "rss": 340.953125,
              "heapTotal": 244.03125,
              "heapUsed": 212.73648834228516,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 337.46875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0849609375,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -3.484375,
              "heapTotal": -7.640625,
              "heapUsed": -11.651527404785156,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6648.666778000013,
            "startMemory": {
              "rss": 337.46875,
              "heapTotal": 236.390625,
              "heapUsed": 201.08758544921875,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.46875,
              "heapTotal": 236.390625,
              "heapUsed": 201.09102630615234,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.056747999973595,
            "startMemory": {
              "rss": 337.46875,
              "heapTotal": 236.390625,
              "heapUsed": 201.09253692626953,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.46875,
              "heapTotal": 236.390625,
              "heapUsed": 201.2519302368164,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 30,
      "timestamp": "2025-03-10T17:42:40.502Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 346.0018439999549,
            "startMemory": {
              "rss": 337.46875,
              "heapTotal": 236.390625,
              "heapUsed": 201.26288604736328,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 252.484375,
              "heapTotal": 8.546875,
              "heapUsed": 4.158668518066406,
              "external": 43.26272106170654
            },
            "memoryDifference": {
              "rss": -84.984375,
              "heapTotal": -227.84375,
              "heapUsed": -197.10421752929688,
              "external": 33.50936317443848
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1479.7223839999642,
            "startMemory": {
              "rss": 252.484375,
              "heapTotal": 8.546875,
              "heapUsed": 4.160179138183594,
              "external": 43.26272106170654
            },
            "endMemory": {
              "rss": 327.1875,
              "heapTotal": 244.03125,
              "heapUsed": 212.74283599853516,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 74.703125,
              "heapTotal": 235.484375,
              "heapUsed": 208.58265686035156,
              "external": -41.50936317443848
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 85.88163999997778,
            "startMemory": {
              "rss": 327.1875,
              "heapTotal": 244.03125,
              "heapUsed": 212.74630737304688,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.8125,
              "heapTotal": 236.390625,
              "heapUsed": 201.12970733642578,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 8.625,
              "heapTotal": -7.640625,
              "heapUsed": -11.616600036621094,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6651.066563999979,
            "startMemory": {
              "rss": 335.8125,
              "heapTotal": 236.390625,
              "heapUsed": 201.13233184814453,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.8125,
              "heapTotal": 236.390625,
              "heapUsed": 201.13577270507812,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.064751999976579,
            "startMemory": {
              "rss": 335.8125,
              "heapTotal": 236.390625,
              "heapUsed": 201.1372833251953,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.8125,
              "heapTotal": 236.390625,
              "heapUsed": 201.3304443359375,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.1931610107421875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 31,
      "timestamp": "2025-03-10T17:42:50.070Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 201.77647599997,
            "startMemory": {
              "rss": 335.8125,
              "heapTotal": 236.390625,
              "heapUsed": 201.3412628173828,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 247.484375,
              "heapTotal": 8.546875,
              "heapUsed": 4.094879150390625,
              "external": 21.345274925231934
            },
            "memoryDifference": {
              "rss": -88.328125,
              "heapTotal": -227.84375,
              "heapUsed": -197.2463836669922,
              "external": 11.591917037963867
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1439.686904000002,
            "startMemory": {
              "rss": 247.484375,
              "heapTotal": 8.546875,
              "heapUsed": 4.0963897705078125,
              "external": 21.345274925231934
            },
            "endMemory": {
              "rss": 342.25,
              "heapTotal": 244.28125,
              "heapUsed": 212.75448608398438,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.765625,
              "heapTotal": 235.734375,
              "heapUsed": 208.65809631347656,
              "external": -19.591917037963867
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.8403479999979,
            "startMemory": {
              "rss": 342.25,
              "heapTotal": 244.28125,
              "heapUsed": 212.7579574584961,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.09093475341797,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": -4.96875,
              "heapTotal": -7.640625,
              "heapUsed": -11.667022705078125,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6654.256951000018,
            "startMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.09355926513672,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.0970001220703,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.5747279999777675,
            "startMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.0985107421875,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.25790405273438,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 32,
      "timestamp": "2025-03-10T17:42:59.459Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 357.55336399999214,
            "startMemory": {
              "rss": 337.28125,
              "heapTotal": 236.78125,
              "heapUsed": 201.54124450683594,
              "external": 9.88000202178955
            },
            "endMemory": {
              "rss": 232.859375,
              "heapTotal": 7.796875,
              "heapUsed": 3.9220809936523438,
              "external": 18.827404975891113
            },
            "memoryDifference": {
              "rss": -104.421875,
              "heapTotal": -228.984375,
              "heapUsed": -197.6191635131836,
              "external": 8.947402954101562
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1445.64938300004,
            "startMemory": {
              "rss": 232.859375,
              "heapTotal": 7.796875,
              "heapUsed": 3.9235916137695312,
              "external": 18.827404975891113
            },
            "endMemory": {
              "rss": 335.140625,
              "heapTotal": 244.03125,
              "heapUsed": 212.76287841796875,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 102.28125,
              "heapTotal": 236.234375,
              "heapUsed": 208.83928680419922,
              "external": -17.074047088623047
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 82.22525700001279,
            "startMemory": {
              "rss": 335.140625,
              "heapTotal": 244.03125,
              "heapUsed": 212.76634979248047,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 336.203125,
              "heapTotal": 236.390625,
              "heapUsed": 201.0345458984375,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 1.0625,
              "heapTotal": -7.640625,
              "heapUsed": -11.731803894042969,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6663.8339419999975,
            "startMemory": {
              "rss": 336.203125,
              "heapTotal": 236.390625,
              "heapUsed": 201.03717041015625,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.203125,
              "heapTotal": 236.390625,
              "heapUsed": 201.04061126708984,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.1330309999757446,
            "startMemory": {
              "rss": 336.203125,
              "heapTotal": 236.390625,
              "heapUsed": 201.04212188720703,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.203125,
              "heapTotal": 236.390625,
              "heapUsed": 201.19847106933594,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 33,
      "timestamp": "2025-03-10T17:43:09.014Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 274.3077569999732,
            "startMemory": {
              "rss": 336.203125,
              "heapTotal": 236.390625,
              "heapUsed": 201.20592498779297,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 235.25,
              "heapTotal": 8.296875,
              "heapUsed": 4.1823577880859375,
              "external": 26.799549102783203
            },
            "memoryDifference": {
              "rss": -100.953125,
              "heapTotal": -228.09375,
              "heapUsed": -197.02356719970703,
              "external": 17.046191215515137
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1455.0808130000369,
            "startMemory": {
              "rss": 235.25,
              "heapTotal": 8.296875,
              "heapUsed": 4.183868408203125,
              "external": 26.799549102783203
            },
            "endMemory": {
              "rss": 330.21875,
              "heapTotal": 244.28125,
              "heapUsed": 212.76123809814453,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 94.96875,
              "heapTotal": 235.984375,
              "heapUsed": 208.5773696899414,
              "external": -25.046191215515137
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 86.1298700000043,
            "startMemory": {
              "rss": 330.21875,
              "heapTotal": 244.28125,
              "heapUsed": 212.76470947265625,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 337.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.08938598632812,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 7.1875,
              "heapTotal": -7.640625,
              "heapUsed": -11.675323486328125,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6727.462369000015,
            "startMemory": {
              "rss": 337.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.09201049804688,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.09545135498047,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.803607000038028,
            "startMemory": {
              "rss": 337.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.09696197509766,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 337.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.25635528564453,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 34,
      "timestamp": "2025-03-10T17:43:18.564Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 341.0533070000238,
            "startMemory": {
              "rss": 337.40625,
              "heapTotal": 236.640625,
              "heapUsed": 201.26394653320312,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 249.234375,
              "heapTotal": 8.046875,
              "heapUsed": 4.3220977783203125,
              "external": 42.14883041381836
            },
            "memoryDifference": {
              "rss": -88.171875,
              "heapTotal": -228.59375,
              "heapUsed": -196.9418487548828,
              "external": 32.39547252655029
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1437.8543059999938,
            "startMemory": {
              "rss": 249.234375,
              "heapTotal": 8.046875,
              "heapUsed": 4.3236083984375,
              "external": 42.14883041381836
            },
            "endMemory": {
              "rss": 326.90625,
              "heapTotal": 244.03125,
              "heapUsed": 212.7601318359375,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 77.671875,
              "heapTotal": 235.984375,
              "heapUsed": 208.4365234375,
              "external": -40.39547252655029
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 85.31526800000574,
            "startMemory": {
              "rss": 326.90625,
              "heapTotal": 244.03125,
              "heapUsed": 212.76360321044922,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 335.96875,
              "heapTotal": 236.390625,
              "heapUsed": 201.04483795166016,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 9.0625,
              "heapTotal": -7.640625,
              "heapUsed": -11.718765258789062,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6700.701873999962,
            "startMemory": {
              "rss": 335.96875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0474624633789,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.96875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0509033203125,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.1345510000246577,
            "startMemory": {
              "rss": 335.96875,
              "heapTotal": 236.390625,
              "heapUsed": 201.0524139404297,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 335.96875,
              "heapTotal": 236.390625,
              "heapUsed": 201.2087631225586,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 35,
      "timestamp": "2025-03-10T17:43:28.134Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 340.6876649999758,
            "startMemory": {
              "rss": 335.96875,
              "heapTotal": 236.390625,
              "heapUsed": 201.2195816040039,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 233.390625,
              "heapTotal": 8.546875,
              "heapUsed": 4.012458801269531,
              "external": 20.696815490722656
            },
            "memoryDifference": {
              "rss": -102.578125,
              "heapTotal": -227.84375,
              "heapUsed": -197.20712280273438,
              "external": 10.94345760345459
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1436.7327309999964,
            "startMemory": {
              "rss": 233.390625,
              "heapTotal": 8.546875,
              "heapUsed": 4.013969421386719,
              "external": 20.696815490722656
            },
            "endMemory": {
              "rss": 334.921875,
              "heapTotal": 244.28125,
              "heapUsed": 212.76426696777344,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 101.53125,
              "heapTotal": 235.734375,
              "heapUsed": 208.75029754638672,
              "external": -18.94345760345459
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 84.74913800001377,
            "startMemory": {
              "rss": 334.921875,
              "heapTotal": 244.28125,
              "heapUsed": 212.76773834228516,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 336.46875,
              "heapTotal": 236.640625,
              "heapUsed": 201.09978485107422,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 1.546875,
              "heapTotal": -7.640625,
              "heapUsed": -11.667953491210938,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6662.21670499997,
            "startMemory": {
              "rss": 336.46875,
              "heapTotal": 236.640625,
              "heapUsed": 201.10240936279297,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.46875,
              "heapTotal": 236.640625,
              "heapUsed": 201.10585021972656,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.071821999968961,
            "startMemory": {
              "rss": 336.46875,
              "heapTotal": 236.640625,
              "heapUsed": 201.10736083984375,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.46875,
              "heapTotal": 236.640625,
              "heapUsed": 201.26675415039062,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 36,
      "timestamp": "2025-03-10T17:43:37.665Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 369.7283859999734,
            "startMemory": {
              "rss": 336.46875,
              "heapTotal": 236.640625,
              "heapUsed": 201.27458953857422,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 233.390625,
              "heapTotal": 8.046875,
              "heapUsed": 3.9324722290039062,
              "external": 20.140244483947754
            },
            "memoryDifference": {
              "rss": -103.078125,
              "heapTotal": -228.59375,
              "heapUsed": -197.3421173095703,
              "external": 10.386886596679688
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1443.8752870000317,
            "startMemory": {
              "rss": 233.390625,
              "heapTotal": 8.046875,
              "heapUsed": 3.9339828491210938,
              "external": 20.140244483947754
            },
            "endMemory": {
              "rss": 335,
              "heapTotal": 244.03125,
              "heapUsed": 212.7671661376953,
              "external": 1.7533578872680664
            },
            "memoryDifference": {
              "rss": 101.609375,
              "heapTotal": 235.984375,
              "heapUsed": 208.83318328857422,
              "external": -18.386886596679688
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.74908600002527,
            "startMemory": {
              "rss": 335,
              "heapTotal": 244.03125,
              "heapUsed": 212.77063751220703,
              "external": 1.7533578872680664
            },
            "endMemory": {
              "rss": 336.53125,
              "heapTotal": 236.390625,
              "heapUsed": 201.0712127685547,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 1.53125,
              "heapTotal": -7.640625,
              "heapUsed": -11.699424743652344,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6720.793294999981,
            "startMemory": {
              "rss": 336.53125,
              "heapTotal": 236.390625,
              "heapUsed": 201.07383728027344,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.53125,
              "heapTotal": 236.390625,
              "heapUsed": 201.07727813720703,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.1167349999886937,
            "startMemory": {
              "rss": 336.53125,
              "heapTotal": 236.390625,
              "heapUsed": 201.07878875732422,
              "external": 9.753357887268066
            },
            "endMemory": {
              "rss": 336.53125,
              "heapTotal": 236.390625,
              "heapUsed": 201.23513793945312,
              "external": 9.753357887268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 37,
      "timestamp": "2025-03-10T17:43:47.288Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 199.79702100000577,
            "startMemory": {
              "rss": 336.53125,
              "heapTotal": 236.390625,
              "heapUsed": 201.24370574951172,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 247.546875,
              "heapTotal": 8.296875,
              "heapUsed": 4.239959716796875,
              "external": 27.26222515106201
            },
            "memoryDifference": {
              "rss": -88.984375,
              "heapTotal": -228.09375,
              "heapUsed": -197.00374603271484,
              "external": 17.501054763793945
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1476.0409649999929,
            "startMemory": {
              "rss": 247.546875,
              "heapTotal": 8.296875,
              "heapUsed": 4.2414703369140625,
              "external": 27.26222515106201
            },
            "endMemory": {
              "rss": 342.375,
              "heapTotal": 244.28125,
              "heapUsed": 212.77064514160156,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 94.828125,
              "heapTotal": 235.984375,
              "heapUsed": 208.5291748046875,
              "external": -25.501054763793945
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.57541300001321,
            "startMemory": {
              "rss": 342.375,
              "heapTotal": 244.28125,
              "heapUsed": 212.77411651611328,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.4375,
              "heapTotal": 236.640625,
              "heapUsed": 201.0824203491211,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": -4.9375,
              "heapTotal": -7.640625,
              "heapUsed": -11.691696166992188,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6647.636862999992,
            "startMemory": {
              "rss": 337.4375,
              "heapTotal": 236.640625,
              "heapUsed": 201.08504486083984,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.4375,
              "heapTotal": 236.640625,
              "heapUsed": 201.08848571777344,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.1474359999992885,
            "startMemory": {
              "rss": 337.4375,
              "heapTotal": 236.640625,
              "heapUsed": 201.08999633789062,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.4375,
              "heapTotal": 236.640625,
              "heapUsed": 201.2493896484375,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 38,
      "timestamp": "2025-03-10T17:43:56.701Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 317.49886399996467,
            "startMemory": {
              "rss": 337.4375,
              "heapTotal": 236.640625,
              "heapUsed": 201.2572250366211,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 249.21875,
              "heapTotal": 8.046875,
              "heapUsed": 4.371406555175781,
              "external": 40.67255401611328
            },
            "memoryDifference": {
              "rss": -88.21875,
              "heapTotal": -228.59375,
              "heapUsed": -196.8858184814453,
              "external": 30.911383628845215
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1445.395727999974,
            "startMemory": {
              "rss": 249.21875,
              "heapTotal": 8.046875,
              "heapUsed": 4.372917175292969,
              "external": 40.67255401611328
            },
            "endMemory": {
              "rss": 326.765625,
              "heapTotal": 244.28125,
              "heapUsed": 212.7745361328125,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 77.546875,
              "heapTotal": 236.234375,
              "heapUsed": 208.40161895751953,
              "external": -38.911383628845215
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.09502699994482,
            "startMemory": {
              "rss": 326.765625,
              "heapTotal": 244.28125,
              "heapUsed": 212.77800750732422,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 336.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.0788116455078,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 9.625,
              "heapTotal": -7.640625,
              "heapUsed": -11.699195861816406,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6679.460864999972,
            "startMemory": {
              "rss": 336.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.08143615722656,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.08487701416016,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.426430999999866,
            "startMemory": {
              "rss": 336.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.08638763427734,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.24273681640625,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 39,
      "timestamp": "2025-03-10T17:44:06.232Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 316.83950800000457,
            "startMemory": {
              "rss": 336.390625,
              "heapTotal": 236.640625,
              "heapUsed": 201.25043487548828,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 249.234375,
              "heapTotal": 8.046875,
              "heapUsed": 4.3754730224609375,
              "external": 40.0401496887207
            },
            "memoryDifference": {
              "rss": -87.15625,
              "heapTotal": -228.59375,
              "heapUsed": -196.87496185302734,
              "external": 30.278979301452637
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1433.220892000012,
            "startMemory": {
              "rss": 249.234375,
              "heapTotal": 8.046875,
              "heapUsed": 4.376983642578125,
              "external": 40.0401496887207
            },
            "endMemory": {
              "rss": 327.09375,
              "heapTotal": 244.28125,
              "heapUsed": 212.77598571777344,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 77.859375,
              "heapTotal": 236.234375,
              "heapUsed": 208.3990020751953,
              "external": -38.27897930145264
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 85.51883000001544,
            "startMemory": {
              "rss": 327.09375,
              "heapTotal": 244.28125,
              "heapUsed": 212.77945709228516,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 336.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.1109161376953,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 9.125,
              "heapTotal": -7.640625,
              "heapUsed": -11.668540954589844,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6708.32628400001,
            "startMemory": {
              "rss": 336.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.11354064941406,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.11822509765625,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.0046844482421875,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 5.017538999964017,
            "startMemory": {
              "rss": 336.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.11973571777344,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.2791290283203,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 40,
      "timestamp": "2025-03-10T17:44:15.783Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 204.5995530000073,
            "startMemory": {
              "rss": 336.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.2869644165039,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 247.90625,
              "heapTotal": 8.296875,
              "heapUsed": 4.358238220214844,
              "external": 33.35801315307617
            },
            "memoryDifference": {
              "rss": -88.3125,
              "heapTotal": -228.34375,
              "heapUsed": -196.92872619628906,
              "external": 23.596842765808105
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1474.1043460000074,
            "startMemory": {
              "rss": 247.90625,
              "heapTotal": 8.296875,
              "heapUsed": 4.359748840332031,
              "external": 33.35801315307617
            },
            "endMemory": {
              "rss": 342.3125,
              "heapTotal": 244.28125,
              "heapUsed": 212.7789306640625,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 94.40625,
              "heapTotal": 235.984375,
              "heapUsed": 208.41918182373047,
              "external": -31.596842765808105
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 82.94089199998416,
            "startMemory": {
              "rss": 342.3125,
              "heapTotal": 244.28125,
              "heapUsed": 212.78240203857422,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 336.359375,
              "heapTotal": 236.640625,
              "heapUsed": 201.1156768798828,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": -5.953125,
              "heapTotal": -7.640625,
              "heapUsed": -11.666725158691406,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6662.961272000044,
            "startMemory": {
              "rss": 336.359375,
              "heapTotal": 236.640625,
              "heapUsed": 201.11830139160156,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.359375,
              "heapTotal": 236.640625,
              "heapUsed": 201.12174224853516,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.1794779999763705,
            "startMemory": {
              "rss": 336.359375,
              "heapTotal": 236.640625,
              "heapUsed": 201.12325286865234,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.359375,
              "heapTotal": 236.640625,
              "heapUsed": 201.27960205078125,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 41,
      "timestamp": "2025-03-10T17:44:25.213Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 214.74095200002193,
            "startMemory": {
              "rss": 336.359375,
              "heapTotal": 236.640625,
              "heapUsed": 201.28730010986328,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 248.140625,
              "heapTotal": 8.046875,
              "heapUsed": 4.40643310546875,
              "external": 35.797630310058594
            },
            "memoryDifference": {
              "rss": -88.21875,
              "heapTotal": -228.59375,
              "heapUsed": -196.88086700439453,
              "external": 26.036459922790527
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1520.7959960000007,
            "startMemory": {
              "rss": 248.140625,
              "heapTotal": 8.046875,
              "heapUsed": 4.4079437255859375,
              "external": 35.797630310058594
            },
            "endMemory": {
              "rss": 342.953125,
              "heapTotal": 244.28125,
              "heapUsed": 212.78182983398438,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 94.8125,
              "heapTotal": 236.234375,
              "heapUsed": 208.37388610839844,
              "external": -34.03645992279053
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.44305699999677,
            "startMemory": {
              "rss": 342.953125,
              "heapTotal": 244.28125,
              "heapUsed": 212.7853012084961,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337,
              "heapTotal": 236.640625,
              "heapUsed": 201.0648193359375,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": -5.953125,
              "heapTotal": -7.640625,
              "heapUsed": -11.720481872558594,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6661.475019000005,
            "startMemory": {
              "rss": 337,
              "heapTotal": 236.640625,
              "heapUsed": 201.06744384765625,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337,
              "heapTotal": 236.640625,
              "heapUsed": 201.07088470458984,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.26871899998514,
            "startMemory": {
              "rss": 337,
              "heapTotal": 236.640625,
              "heapUsed": 201.07239532470703,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337,
              "heapTotal": 236.640625,
              "heapUsed": 201.2317886352539,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 42,
      "timestamp": "2025-03-10T17:44:34.704Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 351.2963940000045,
            "startMemory": {
              "rss": 337.5,
              "heapTotal": 236.8125,
              "heapUsed": 201.59243774414062,
              "external": 9.927718162536621
            },
            "endMemory": {
              "rss": 251.96875,
              "heapTotal": 8.296875,
              "heapUsed": 4.2044525146484375,
              "external": 42.93622398376465
            },
            "memoryDifference": {
              "rss": -85.53125,
              "heapTotal": -228.515625,
              "heapUsed": -197.3879852294922,
              "external": 33.00850582122803
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1478.7955039999797,
            "startMemory": {
              "rss": 251.96875,
              "heapTotal": 8.296875,
              "heapUsed": 4.205963134765625,
              "external": 42.93622398376465
            },
            "endMemory": {
              "rss": 327.25,
              "heapTotal": 244.28125,
              "heapUsed": 212.7887420654297,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 75.28125,
              "heapTotal": 235.984375,
              "heapUsed": 208.58277893066406,
              "external": -41.17505359649658
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 84.86814299999969,
            "startMemory": {
              "rss": 327.25,
              "heapTotal": 244.28125,
              "heapUsed": 212.7922134399414,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 336.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.0732192993164,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 9.640625,
              "heapTotal": -7.640625,
              "heapUsed": -11.718994140625,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6661.950239000027,
            "startMemory": {
              "rss": 336.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.07584381103516,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.07928466796875,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.125513000006322,
            "startMemory": {
              "rss": 336.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.08079528808594,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 336.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.23714447021484,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 43,
      "timestamp": "2025-03-10T17:44:44.286Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 276.812453999999,
            "startMemory": {
              "rss": 336.890625,
              "heapTotal": 236.640625,
              "heapUsed": 201.24484252929688,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 234.390625,
              "heapTotal": 8.046875,
              "heapUsed": 4.157096862792969,
              "external": 23.731858253479004
            },
            "memoryDifference": {
              "rss": -102.5,
              "heapTotal": -228.59375,
              "heapUsed": -197.0877456665039,
              "external": 13.970687866210938
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1534.4237149999826,
            "startMemory": {
              "rss": 234.390625,
              "heapTotal": 8.046875,
              "heapUsed": 4.1586456298828125,
              "external": 23.731858253479004
            },
            "endMemory": {
              "rss": 336.265625,
              "heapTotal": 244.28125,
              "heapUsed": 212.78710174560547,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 101.875,
              "heapTotal": 236.234375,
              "heapUsed": 208.62845611572266,
              "external": -21.970687866210938
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 84.9795349999913,
            "startMemory": {
              "rss": 336.265625,
              "heapTotal": 244.28125,
              "heapUsed": 212.7905731201172,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.09712982177734,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 1.46875,
              "heapTotal": -7.640625,
              "heapUsed": -11.693443298339844,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6683.593545000011,
            "startMemory": {
              "rss": 337.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.0997543334961,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.1031951904297,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 5.222120999998879,
            "startMemory": {
              "rss": 337.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.10470581054688,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.26409912109375,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 44,
      "timestamp": "2025-03-10T17:44:53.874Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 344.600167000026,
            "startMemory": {
              "rss": 337.734375,
              "heapTotal": 236.640625,
              "heapUsed": 201.27193450927734,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 246.21875,
              "heapTotal": 7.796875,
              "heapUsed": 4.1288909912109375,
              "external": 38.19802951812744
            },
            "memoryDifference": {
              "rss": -91.515625,
              "heapTotal": -228.84375,
              "heapUsed": -197.1430435180664,
              "external": 28.436859130859375
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1435.3724279999733,
            "startMemory": {
              "rss": 246.21875,
              "heapTotal": 7.796875,
              "heapUsed": 4.130401611328125,
              "external": 38.19802951812744
            },
            "endMemory": {
              "rss": 340.65625,
              "heapTotal": 244.28125,
              "heapUsed": 212.78997802734375,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 94.4375,
              "heapTotal": 236.484375,
              "heapUsed": 208.65957641601562,
              "external": -36.436859130859375
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 83.6792499999865,
            "startMemory": {
              "rss": 340.65625,
              "heapTotal": 244.28125,
              "heapUsed": 212.79344940185547,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.13174438476562,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": -3.4375,
              "heapTotal": -7.640625,
              "heapUsed": -11.661705017089844,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6654.155830000003,
            "startMemory": {
              "rss": 337.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.13436889648438,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.13780975341797,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.0991609999909997,
            "startMemory": {
              "rss": 337.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.13932037353516,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.29566955566406,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 45,
      "timestamp": "2025-03-10T17:45:03.397Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 359.02154399995925,
            "startMemory": {
              "rss": 337.21875,
              "heapTotal": 236.640625,
              "heapUsed": 201.30400848388672,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 233.03125,
              "heapTotal": 8.046875,
              "heapUsed": 3.95562744140625,
              "external": 17.28905963897705
            },
            "memoryDifference": {
              "rss": -104.1875,
              "heapTotal": -228.59375,
              "heapUsed": -197.34838104248047,
              "external": 7.527889251708984
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1453.168268999958,
            "startMemory": {
              "rss": 233.03125,
              "heapTotal": 8.046875,
              "heapUsed": 3.9571380615234375,
              "external": 17.28905963897705
            },
            "endMemory": {
              "rss": 335.109375,
              "heapTotal": 244.28125,
              "heapUsed": 212.79319763183594,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 102.078125,
              "heapTotal": 236.234375,
              "heapUsed": 208.8360595703125,
              "external": -15.527889251708984
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 84.0731889999588,
            "startMemory": {
              "rss": 335.109375,
              "heapTotal": 244.28125,
              "heapUsed": 212.79666900634766,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.640625,
              "heapTotal": 236.640625,
              "heapUsed": 201.16085815429688,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 2.53125,
              "heapTotal": -7.640625,
              "heapUsed": -11.635810852050781,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6669.4713099999935,
            "startMemory": {
              "rss": 337.640625,
              "heapTotal": 236.640625,
              "heapUsed": 201.16348266601562,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.640625,
              "heapTotal": 236.640625,
              "heapUsed": 201.16692352294922,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.171103000000585,
            "startMemory": {
              "rss": 337.640625,
              "heapTotal": 236.640625,
              "heapUsed": 201.1684341430664,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.640625,
              "heapTotal": 236.640625,
              "heapUsed": 201.32782745361328,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 46,
      "timestamp": "2025-03-10T17:45:12.969Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 311.0528500000364,
            "startMemory": {
              "rss": 337.640625,
              "heapTotal": 236.640625,
              "heapUsed": 201.33566284179688,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 247.953125,
              "heapTotal": 8.046875,
              "heapUsed": 4.442161560058594,
              "external": 40.95035743713379
            },
            "memoryDifference": {
              "rss": -89.6875,
              "heapTotal": -228.59375,
              "heapUsed": -196.89350128173828,
              "external": 31.189187049865723
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1451.6313470000168,
            "startMemory": {
              "rss": 247.953125,
              "heapTotal": 8.046875,
              "heapUsed": 4.443672180175781,
              "external": 40.95035743713379
            },
            "endMemory": {
              "rss": 327.453125,
              "heapTotal": 244.03125,
              "heapUsed": 212.7965087890625,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 79.5,
              "heapTotal": 235.984375,
              "heapUsed": 208.35283660888672,
              "external": -39.18918704986572
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 82.86024100001669,
            "startMemory": {
              "rss": 327.453125,
              "heapTotal": 244.03125,
              "heapUsed": 212.79998016357422,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.59375,
              "heapTotal": 236.390625,
              "heapUsed": 201.08135986328125,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 10.140625,
              "heapTotal": -7.640625,
              "heapUsed": -11.718620300292969,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6659.842800000042,
            "startMemory": {
              "rss": 337.59375,
              "heapTotal": 236.390625,
              "heapUsed": 201.083984375,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.59375,
              "heapTotal": 236.390625,
              "heapUsed": 201.0874252319336,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.0736410000245087,
            "startMemory": {
              "rss": 337.59375,
              "heapTotal": 236.390625,
              "heapUsed": 201.08893585205078,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.59375,
              "heapTotal": 236.390625,
              "heapUsed": 201.2452850341797,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 47,
      "timestamp": "2025-03-10T17:45:22.480Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 203.8036200000206,
            "startMemory": {
              "rss": 337.59375,
              "heapTotal": 236.390625,
              "heapUsed": 201.256103515625,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 246.296875,
              "heapTotal": 8.796875,
              "heapUsed": 4.312095642089844,
              "external": 29.346948623657227
            },
            "memoryDifference": {
              "rss": -91.296875,
              "heapTotal": -227.59375,
              "heapUsed": -196.94400787353516,
              "external": 19.58577823638916
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1455.9342699999688,
            "startMemory": {
              "rss": 246.296875,
              "heapTotal": 8.796875,
              "heapUsed": 4.313606262207031,
              "external": 29.346948623657227
            },
            "endMemory": {
              "rss": 340.765625,
              "heapTotal": 244.28125,
              "heapUsed": 212.79793548583984,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 94.46875,
              "heapTotal": 235.484375,
              "heapUsed": 208.4843292236328,
              "external": -27.58577823638916
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 82.00580500002252,
            "startMemory": {
              "rss": 340.765625,
              "heapTotal": 244.28125,
              "heapUsed": 212.80140686035156,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.10907745361328,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": -3.421875,
              "heapTotal": -7.640625,
              "heapUsed": -11.692329406738281,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6725.404899000016,
            "startMemory": {
              "rss": 337.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.11170196533203,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.11624908447266,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.004547119140625,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.066018000012264,
            "startMemory": {
              "rss": 337.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.11775970458984,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.27715301513672,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 48,
      "timestamp": "2025-03-10T17:45:31.953Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 312.79009600001154,
            "startMemory": {
              "rss": 337.34375,
              "heapTotal": 236.640625,
              "heapUsed": 201.2881088256836,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 234.484375,
              "heapTotal": 8.296875,
              "heapUsed": 4.152915954589844,
              "external": 23.816853523254395
            },
            "memoryDifference": {
              "rss": -102.859375,
              "heapTotal": -228.34375,
              "heapUsed": -197.13519287109375,
              "external": 14.055683135986328
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1455.659159999981,
            "startMemory": {
              "rss": 234.484375,
              "heapTotal": 8.296875,
              "heapUsed": 4.154426574707031,
              "external": 23.816853523254395
            },
            "endMemory": {
              "rss": 337.234375,
              "heapTotal": 244.28125,
              "heapUsed": 212.8021469116211,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 102.75,
              "heapTotal": 235.984375,
              "heapUsed": 208.64772033691406,
              "external": -22.055683135986328
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 84.78585399995791,
            "startMemory": {
              "rss": 337.234375,
              "heapTotal": 244.28125,
              "heapUsed": 212.8056182861328,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.13766479492188,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0.046875,
              "heapTotal": -7.640625,
              "heapUsed": -11.667953491210938,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6721.055281999987,
            "startMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.14028930664062,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.14373016357422,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.105253999994602,
            "startMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.1452407836914,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.3015899658203,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 49,
      "timestamp": "2025-03-10T17:45:41.533Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 368.5289890000131,
            "startMemory": {
              "rss": 337.28125,
              "heapTotal": 236.640625,
              "heapUsed": 201.30928802490234,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 237.84375,
              "heapTotal": 8.046875,
              "heapUsed": 4.095573425292969,
              "external": 27.543001174926758
            },
            "memoryDifference": {
              "rss": -99.4375,
              "heapTotal": -228.59375,
              "heapUsed": -197.21371459960938,
              "external": 17.78183078765869
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1520.0830019999994,
            "startMemory": {
              "rss": 237.84375,
              "heapTotal": 8.046875,
              "heapUsed": 4.097084045410156,
              "external": 27.543001174926758
            },
            "endMemory": {
              "rss": 334.359375,
              "heapTotal": 244.03125,
              "heapUsed": 212.8037338256836,
              "external": 1.7611703872680664
            },
            "memoryDifference": {
              "rss": 96.515625,
              "heapTotal": 235.984375,
              "heapUsed": 208.70664978027344,
              "external": -25.78183078765869
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 80.01375199999893,
            "startMemory": {
              "rss": 334.359375,
              "heapTotal": 244.03125,
              "heapUsed": 212.8072052001953,
              "external": 1.7611703872680664
            },
            "endMemory": {
              "rss": 338.125,
              "heapTotal": 236.390625,
              "heapUsed": 201.11095428466797,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 3.765625,
              "heapTotal": -7.640625,
              "heapUsed": -11.696250915527344,
              "external": 8
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6661.168614999973,
            "startMemory": {
              "rss": 338.125,
              "heapTotal": 236.390625,
              "heapUsed": 201.11357879638672,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 338.125,
              "heapTotal": 236.390625,
              "heapUsed": 201.1170196533203,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 4.00232099997811,
            "startMemory": {
              "rss": 338.125,
              "heapTotal": 236.390625,
              "heapUsed": 201.1185302734375,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 338.125,
              "heapTotal": 236.390625,
              "heapUsed": 201.27792358398438,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.159393310546875,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    },
    {
      "iteration": 50,
      "timestamp": "2025-03-10T17:45:51.169Z",
      "tests": {
        "memory": {
          "allocationDeallocation": {
            "name": "Memory Allocation/Deallocation",
            "executionTime": 365.70117100002244,
            "startMemory": {
              "rss": 338.125,
              "heapTotal": 236.390625,
              "heapUsed": 201.28885650634766,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 239.375,
              "heapTotal": 8.796875,
              "heapUsed": 3.9617691040039062,
              "external": 26.94809913635254
            },
            "memoryDifference": {
              "rss": -98.75,
              "heapTotal": -227.59375,
              "heapUsed": -197.32708740234375,
              "external": 17.186928749084473
            },
            "result": "Completed 1000 allocations and 1000 deallocations"
          },
          "jsonLoad": {
            "name": "Large JSON Memory Load",
            "executionTime": 1605.3405980000389,
            "startMemory": {
              "rss": 239.375,
              "heapTotal": 8.796875,
              "heapUsed": 3.9632797241210938,
              "external": 26.94809913635254
            },
            "endMemory": {
              "rss": 333.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.80782318115234,
              "external": 2.2616958618164062
            },
            "memoryDifference": {
              "rss": 94.5625,
              "heapTotal": 239.234375,
              "heapUsed": 208.84454345703125,
              "external": -24.686403274536133
            },
            "result": "Loaded JSON with 1000000 entries"
          }
        },
        "diskIO": {
          "fileRead": {
            "name": "Large File Read",
            "executionTime": 87.57893399999011,
            "startMemory": {
              "rss": 333.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.81129455566406,
              "external": 2.2616958618164062
            },
            "endMemory": {
              "rss": 346.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.83045959472656,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 13,
              "heapTotal": 0,
              "heapUsed": 0.0191650390625,
              "external": 7.49947452545166
            },
            "result": "Read 100 MB file"
          }
        },
        "cpu": {
          "fibonacci": {
            "name": "Recursive Fibonacci",
            "executionTime": 6660.785906999954,
            "startMemory": {
              "rss": 346.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.8330841064453,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 346.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.8365249633789,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.00344085693359375,
              "external": 0
            },
            "result": "Calculated Fibonacci(40) 3 times, result: 102334155"
          },
          "primeCalculation": {
            "name": "Prime Number Calculation",
            "executionTime": 3.107413000019733,
            "startMemory": {
              "rss": 346.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.8380355834961,
              "external": 9.761170387268066
            },
            "endMemory": {
              "rss": 346.9375,
              "heapTotal": 248.03125,
              "heapUsed": 212.994384765625,
              "external": 9.761170387268066
            },
            "memoryDifference": {
              "rss": 0,
              "heapTotal": 0,
              "heapUsed": 0.15634918212890625,
              "external": 0
            },
            "result": "Found 5133 prime numbers up to 50,000"
          }
        }
      }
    }
  ]
}